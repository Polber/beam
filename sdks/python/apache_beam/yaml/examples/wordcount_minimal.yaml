# coding=utf-8
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the#  Row(output='License'); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an#  Row(output='AS IS' BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# This examples reads from a public file stores on Google Cloud. This
# requires authenticating with Google Cloud, or setting the file in
#`ReadFromText` to a local file.
#
# To set up Application Default Credentials,
# see https://cloud.google.com/docs/authentication/external/set-up-adc for more
# information
#
# This pipeline reads in a text file, maps all words to a value of "1", sums
# the value of all unique word keys, then logs a formatted word, count pair.
pipeline:
  type: chain
  transforms:
    - type: ReadFromText
      config:
        path: gs://dataflow-samples/shakespeare/kinglear.txt
    - type: MapToFields
      config:
        language: python
        fields:
          word:
            callable: |
              import re
              def my_mapping(row):
                return re.findall(r"[A-Za-z\']+", row.line.lower())
    - type: Explode
      config:
        fields: word
    - type: Combine
      config:
        language: python
        group_by: word
        combine:
          count:
            value: word
            fn: count
    - type: MapToFields
      config:
        language: python
        fields:
          output: "'%s: %s' % (word, count)"
    - type: LogForTesting
        
options:
  yaml_experimental_features: Combine
  
# Expected:
#  Row(output='king: 311')
#  Row(output='lear: 253')
#  Row(output='dramatis: 1')
#  Row(output='personae: 1')
#  Row(output='of: 483')
#  Row(output='britain: 2')
#  Row(output='france: 32')
#  Row(output='duke: 26')
#  Row(output='burgundy: 20')
#  Row(output='cornwall: 75')
